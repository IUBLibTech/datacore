# Master configuration file. This holds the definitions and defaults that
# can be set per environment in settings/, or settings.local.yml. Keys can
# certainly be added in secondary files, but be sure to verify that the key
# will be used. Most values are used individually, rather than passing
# along a whole hash or array.

# Application hostname, used for link, asset, and email generation.
# More specific defaults are included in each enviroment.
# The APP_HOSTNAME environment variable can override this.
hostname: default.deepblue.lib.umich.edu

# Relative URL segment at which the application resides, used to compute links
# and assets. Used instead of RAILS_RELATIVE_URL_ROOT everywhere, because the
# behavior with the environment variable has proven inconsistent.
relative_url_root: /

# Does not appear to be used anywhere
# from_email: 'deepblue@umich.edu'

# Used to set Rails.configuration.notification_email; should be use directly
# from Settings unless there is an engine reference somewhere.
notification_email: <%= ENV['USER'] %>@iu.edu

# Used to set Rails.configuration.user_email, but value never seems to be set.
# Should also be used directly from Settings rather than being inserted into
# the Rails.configuration.
# user_email:

# These keys are mapped to Hyrax configuration options in places like
# initializers/hyrax.rb.
hyrax:
  # Settings for email contact form and deposit notification
  contact_email: <%= ENV['USER'] %>@iu.edu
  minter_statefile: <%= "/tmp/umrdr-minter-#{Time.now.min}#{Time.now.sec}" %>
  # Redis namespace used in both Hyrax and Resque initializers
  redis_namespace: deepbluedata

# Fedora connection information.
# These values are used in fedora.yml; no literals should appear there. Each
# environment has more specific defaults, so an invalid host is used here.
fedora:
  user: fedoraAdmin
  password: fedoraAdmin
  url: http://fcrepo.invalid/
  base_path: /deepbluedata

# Solr connection information for both ActiveFedora and Blacklight.
# This value is used in solr.yml; no literals should appear there. Each
# environment has more specific defaults, so an invalid host is used here.
# The SOLR_URL environment variable will override the defaults.
solr:
  url: http://solr.invalid/core

# These values are used for the Redis connections without modification the
# redis_config.rb and resque_config.rb initializers. The namespace for
# ActiveJob/Resque is handled separately, as the hyrax.redis_namespace key
# above.
#
# Note that the url option will override many options, per the redis gem docs.
# A value in the REDIS_URL environment variable will override a url value.
redis:
  host: localhost
  port: 6379
  thread_safe: true

# Datacite client configuration
# Set real values in settings.local.yml or local environment file.
datacite:
  host: api.test.datacite.org
  username: datacite.test.user
  password: datacite.test.password
  prefix: '10.5072' # force string interpretation

jira:
  username: jirausername.invalid
  password: jirapassword.invalid
  site_url: https://tools.lib.umich.edu


# These are keys used to bridge between settings and the standard Rails files.
rails:
  # Database settings as they will be mapped into database.yml for the running
  # environment. The shell variable DATABASE_URL will always override values
  # in the settings files.
  database:
    adapter: sqlite3
    pool: 5
    timeout: 5000
  # This value is nil here, to be set per environment and read in secrets.yml.
  # The SECRET_KEY_BASE environment variable will always override this setting.
  secret_key_base:
  # Action Cable settings applied in cable.yml
  cable:
    adapter: async

sda_api:
  show: ''

omniauth:
  host: idp-stg.login.iu.edu
  login_url: /idp/profile/cas/login
  service_validate_url: /idp/profile/cas/serviceValidate
  logout_url: /idp/profile/cas/logout
  callback_url: /users/auth/cas/callback

ingest:
  user_key: username@iu.edu
  standard_inbox: tmp/ingest/in
  large_inbox: tmp/ingest/large
  outbox: tmp/ingest/out
  size_limit:
    fedora: 5368709120 # 5.gigabytes
    ingest: 107374182400 # 100.gigabytes

archive_api:
  disabled: false # used to force-disable archive server interactions, when the server is known down
  use_recaptcha: false
  require_user_authentication: false
  provide_email: false # [false, :optional, :required]
  send_email: false # should be true when provide_email is :optional, :required
  url: archive.url.invalid/%s/%s
  username: archiveusername.invalid
  password: archivepassword.invalid
  local: /path/to/archive_files/%s
  # note this limit is checked before a job is run, without accounting for incoming file size -- final unblocked job can exceed this value
  maximum_disk_space: 10995116277760 # 10.terabytes
  maximum_concurrent_jobs:
    - limit: 5
      statuses: # staging, download requests
      -  :staging_available
      -  :staging_requested
      -  :staged_after_request
      -  :staged_without_request
    - limit: 10
      statuses:
        - :local # retained downloaded files
  timeout_before_download: 86400 # 24 hours
  timeout_after_download: 172800 # 48 hours
  # used in descriptive fields, above action button
  # a single archive_status can map to more than one #status
  # multiple #status values map to the same end user message
  status_messages: &status_messages
    staging_available: &available "File found in archives.  You may request retrieval from archives to make available for download."
    staging_requested: &requested "File is being retrieved from archives, and will be available for download once retrieved.  Please allow approximately 1 hour for retrieval."
    staged_after_request: *requested
    staged_without_request: *available
    local: "File is available for immediate download"
    not_found: "File not found in archives.  Unable to request file."
    no_response: "File archives server is not responding.  Unable to request file."
    unexpected: "Unexpected response from file archives server.  Unable to request file."
    too_many_requests: "File is available in archives, but too many archive retrieval requests are currently running.  Please try again later."
  # used for button text
  request_actions:
    staging_available: &available 'Request file retrieval from archives'
    staging_requested: &requested 'Retrieving requested file from archives'
    staged_after_request: *requested
    staged_without_request: *available
    local: 'Download'
    not_found: &unavailable 'File is not available'
    no_response: *unavailable
    unexpected: *unavailable
    too_many_requests: *unavailable
  # used for :notice and :alert messages in controller flash
  flash_messages: *status_messages
  # used for UI display of status codes
  status_codes_in_ui:
    staging_available: &available_in_archives "Available in archives"
    staging_requested: &request_processing "Archive retrieval request is processing"
    staged_after_request: *request_processing
    staged_without_request: *available_in_archives
    local: "Available for download"
    not_found: "Not found in archives"
    no_response: &archives_unavailable "Archives unavailable"
    unexpected: *archives_unavailable
    too_many_requests: *archives_unavailable

# keys need to be present in .env as well
recaptcha:
  minimum_score: 0.5
  v2:
    site_key: 'your_recaptcha_v2_site_key'
    secret_key: 'your_recaptcha_v2_secret_key'
  v3:
    site_key: 'your_recaptcha_v3_site_key'
    secret_key: 'your_recaptcha_v3_secret_key'

# ldap_groups_lookup
ldap:
  enabled: false
  host: 'ldap_host'
  port: 000
  user: 'ldap_user'
  pass: 'ldap_password'
  tree: 'ldap_tree'
  account_ou: 'ldap_account_ou'
  group_ou: 'ldap_group_ou'

zip_download_enabled: true

rack_attack:
  enabled: true
  config_key: rack_attack_config-v1
  config_ttl: 60
  throttle_limit: 50
  throttle_period: 120

rack_profiler:
  enabled: false
